<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xsl" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc symrefs="yes" ?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="info"
  ipr="trust200902" submissionType="IETF"
  docName="draft-multiformats-multiformats-01"
  tocInclude="true" sortRefs="true" symRefs="true" version="2">

<front>
  <title>The Multiformats Registry Group</title>
  <seriesInfo name="Internet-Draft" value="draft-multiformats-multiformats-01"/>

  <author initials="J." surname="Benet" fullname="Juan Benet">
    <organization>Protocol Labs</organization>
    <address>
      <postal>
        <street>548 Market Street, #51207</street>
        <city>San Francisco</city>
        <region>CA</region>
        <code>94104</code>
        <country>US</country>
      </postal>
      <phone>+1 619 957 7606</phone>
      <email>juan@protocol.ai</email>
      <uri>http://juan.benet.ai/</uri>
    </address>
  </author>

  <author initials="M." surname="Sporny" fullname="Manu Sporny">
    <organization>Digital Bazaar</organization>
    <address>
      <postal>
        <street>203 Roanoke Street W.</street>
        <city>Blacksburg</city>
        <region>VA</region>
        <code>24060</code>
        <country>US</country>
      </postal>
      <phone>+1 540 961 4469</phone>
      <email>msporny@digitalbazaar.com</email>
      <uri>http://manu.sporny.org/</uri>
    </address>
  </author>

  <author initials="J." surname="Caballero" fullname="Juan Caballero">
    <organization>learningProof uG</organization>
    <address>
      <postal>
        <street>Kiefholzstrasse</street>
        <city>Berlin</city>
        <region>Berlin</region>
        <code>12435</code>
        <country>Germany</country>
      </postal>
      <phone>+1 415 555 5555</phone>
      <email>bumblefudge@learningproof.xyz</email>
      <uri>http://learningproof.xyz/</uri>
    </address>
  </author>

  <date month="July" day="21" year="2023" />
  <area>Security</area>
  <workgroup />
  <keyword>digest algorithm</keyword>
  <keyword>digital signature</keyword>
  <keyword>PKI</keyword>
  <keyword>SHA</keyword>
  <keyword>BLAKE</keyword>
  <keyword>poseidon</keyword>
  <keyword>skein</keyword>

  <abstract>
    <t>
The multiformats are a group of specifications and corresponding registries that
enable protocols for self-describing data. They include multibase and
multihash, which allow for self-describing base-encodings of binary data into
strings and self-describing hashes over digests according to specific
algorithms.
    </t>
  </abstract>

  <note title="Feedback">
    <t>
This specification is a joint work product of
<eref target="https://protocol.ai/">Protocol Labs</eref> and the
<eref target="https://w3c-ccg.github.io/">W3C Credentials Community Group</eref>.
Feedback related to this specification should logged in the
<eref target="https://github.com/w3c-ccg/multihash/issues">issue tracker</eref>
or be sent to
<eref target="mailto:public-credentials@w3.org">public-credentials@w3.org</eref>.
    </t>
  </note>
</front>
<middle>
  <section anchor="intro" title="Introduction">
    <t>
The multiformats coordination mechanism arose organically over many years of
experimentation, mostly within but also outside of the IPFS network and its
various implementations and networks. As such, the history of its registry to
date can be found in the discussion history of the public repositories of the
github organization Multiformats, where registrations still originate in the
form of issues and pull requests. The governance going forward of this registry
group is described below under Iana Considerations.
    </t>
  </section>
</middle>
<back>
  <references title="Normative References">
  </references>

  <references title="Informative References">
  </references>

  <section anchor="appendix-a" title="Security Considerations">
    <t>
There are a number of security considerations to take into account when
implementing or utilizing these specifications. Consulting the Security
Considerations of the specification corresponding to each registry within the
group is recommended.
    </t>
  </section>
  <section anchor="acknowledgements" title="Acknowledgements">
    <t>
The editors would like to thank the following individuals for feedback on and
implementations of the specification (in alphabetical order).
    </t>
  </section>
  <section anchor="appendix-c" title="IANA Considerations">
    <t>
The primary function of the multiformats registry group is to support multiple
value encodings registered in an organized and interoperable way. In turn, this
requires the ability to register new encodings for each multiformat type.
Encodings are indicated using some form of flag (e.g. a prefix) and such the
registries of these flags can become exhausted (e.g. smaller corners of the
group, like the single-byte range), congested (if commonly-used encodings
require abnormally long flags), or "squatted" (i.e. reserved too early without
proven adoption and utility).
    </t>
    <t>
Essentially, registrations and re-registrations proceed through the following
steps-- if all requirements are already met at time of initial registration,
these can be collapsed.  Essentially, they are: 
    </t>
    <t>
1. "Reserved" entries can be inserted directly by protocol designers or Stewards
to prevent interoperability or functional pitfalls - "Reserved" entries can also
be submitted on an <eref
target="https://www.rfc-editor.org/rfc/rfc8126.html#section-4.2">Experimental
Use</eref>
basis as specified in RFC8126. Registrations at this level are essentially
courtesies to other registrants and invitations to collaborate or provide
feedback. These can be deprecated in favor of competing "Draft" or "Final"
proposals for the same unique entry code. 
    </t>
    <t>
2. "Draft" entries can be submitted by mature projects that can reasonably
document the requirements below and pass  <eref
target="https://www.rfc-editor.org/rfc/rfc8126.html#section-4.5">Expert
Review</eref>.
    </t>
    <t>
3. "Final" entries must document the complete requirements below and pass review
on a  <eref
target="https://www.rfc-editor.org/rfc/rfc8126.html#section-4.6">Specification
Required</eref> basis.
    </t>
    <t>
In order to ensure that our registries are as extensible as they need to be but
do not suffer from over-use, we have a set of criteria which are used to ensure
that only encodings that broadly benefit the community are registered.
    </t>
    <t>
In order to be accepted for registration as draft, an encoding MUST:
    </t>
    <t>
1. Volunteer at least one person who will be available to answer questions and
address issues through the registration period and for some time after the
encoding is accepted. 
    </t>
    <t>
2. Additionally, contact information for a change controller (not necessarily
the same person as above, ideally an organization assuming long-term
responsibility for systems using the multiformat) in case of updates to or
disputes around an entry.
    </t>
    <t>
3. Provide evidence that the encoding is supported in at least two production
implementations.
    </t>
    <t>
4. Describe a convincing use case for the deployment of this specific encoding.
    </t>
    <t>
5. Produce a specification indicating how to process it at a level of detail
that makes implementations testable. (References to an external specification is
acceptable if it comes from a body with sufficient durability guarantees.)
    </t>
    <t>
And, for that registration to proceed to `final` designation, it must also
    </t>
    <t>
6. Provide a comprehensive test suite sufficient to support independent
interoperable implementations, or at least be comprised entirely of technologies
that are already mature and have test suites.
    </t>
    <t>
7. Produce a specification indicating how to process it at a level of detail
that makes multiple independent implementations demonstrably interoperable.
    </t>
    <t>
If an encoding seems plausible but does not yet fulfil all requirements, it can
be registered with a `draft` status.  In exceptional cases, consensus of the
Stewards and Experts can excuse one of the above requirements. 
    </t>
    <t>
Encodings with a `draft` status should be revisited by <eref
target="https://github.com/orgs/ipfs/teams/specs-stewards/members">Specs
Stewards</eref> regularly. If after some reasonable amount of time (enough to
make progress, but ideally no more than a year) a `draft` encoding has not
resolved issues with its registration, it will become `deprecated`. After an
encoding is `deprecated` for some time at the discretion of the Stewards and
Experts, decided to be sufficient for its use to be reasonably considered
eliminated or historical, its code becomes available for reuse (but remains
listed under new entries as `deprecated`). 
    </t>
    <t>
Accepted encodings that meet all of the requirements above (confirmed by the
Experts) will bee granted a status of `permanent` within a reasonable amount of
time by the Stewards.
    </t>
  </section>
</back>
</rfc>